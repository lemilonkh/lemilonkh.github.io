---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";

const allGames = await getCollection('games');
const games = allGames.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const anim = {
  old: {
    name: 'fadeOut',
    duration: '0.2s',
    easing: 'ease-out',
    fillMode: 'forwards',
  },
  new: {
    name: 'fadeIn',
    duration: '0.2s',
    easing: 'ease-out',
    fillMode: 'forwards',
  },
};
const imageAnimation = {
  forwards: anim,
  backwards: {old: {name: 'none'}, new: {name: 'none'}},
};
function getAspectHeight(width: number, image: ImageMetadata) {
  return width * (image.height / image.width);
}
---
<BaseLayout title="Games" useViewTransitions>
  <div class="grid">
    {games.map(game => (
      <div class="cell">
        <a href={"/games/" +game.slug}>
          <Image
            src={game.data.screenshots[0]}
            alt={game.data.name}
            width="600"
            height={getAspectHeight(600, game.data.screenshots[0])}
            transition:name={game.slug}
            transition:animate={imageAnimation}
            class="cell-image"
          />
          <div class="overlay" />
          <div class="info">
            <p class="postlink">{game.data.name}</p>
            <p class="description">{game.data.description}</p>
          </div>
        </a>
      </div>
    ))}
  </div>
</BaseLayout>
<style>
  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    grid-auto-rows: 1fr;
    gap: 16px;
    width: 100%;
  }
  .grid::before {
    content: '';
    width: 0;
    padding-bottom: 100%;
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }
  .grid > *:first-child {
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }
  .cell {
    cursor: pointer;
    position: relative;
  }
  .cell-image {
    width: 100%;
    height: 100%;
    z-index: -1;
    object-fit: cover;
    object-position: center center;
    border-radius: 16px;
  }
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, transparent 20%, black 100%);
    background-position: 0px;
    z-index: 1;
    opacity: 0.8;
    transition: opacity 300ms ease-out;
    border-radius: 16px;
  }
  .cell:hover .overlay {
    opacity: 1;
  }
  .cell:hover .postlink {
    text-decoration: underline;
  }
  .info {
    position: absolute;
    left: 0;
    bottom: 0;
    padding: 16px;
    color: white;
    z-index: 1;
  }
  .postlink {
    color: #FFF;
    font-weight: bold;
    font-size: 16pt;
  }
  .description {
    max-width: 100%;
    word-wrap: break-word;
    margin-bottom: 0;
  }
</style>

